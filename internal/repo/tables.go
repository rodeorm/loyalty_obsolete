package repo

import (
	"context"
	"log"
)

func (s postgresStorage) createTables(ctx context.Context) error {

	err := s.dropTables(ctx)
	if err != nil {
		log.Println("Проблема при удалении таблиц")
		return err
	}

	err = s.createUsersTable(ctx)
	if err != nil {
		log.Println("Проблема при создании таблицы с Пользователями")
		return err
	}

	err = s.createOrdersTable(ctx)
	if err != nil {
		log.Println("Проблема при создании таблицы с Заказами")
		return err
	}

	err = s.createOperationsTable(ctx)
	if err != nil {
		log.Println("Проблема при создании таблицы с Операциями")
		return err
	}
	return nil
}

func (s postgresStorage) dropTables(ctx context.Context) error {
	_, err := s.DB.ExecContext(ctx, "DROP TABLE IF EXISTS OperationTypes, OrderStatuses, Users, Orders, Operations")
	if err != nil {
		log.Println("Проблема при создании таблицы с Типами операции")
		return err
	}
	return nil
}

func (s postgresStorage) createUsersTable(ctx context.Context) error {
	_, err := s.DB.ExecContext(ctx,
		"CREATE TABLE IF NOT EXISTS  Users"+
			"("+
			"login TEXT PRIMARY KEY"+
			", balance NUMERIC"+
			", password VARCHAR(100) NOT NULL"+

			");")
	if err != nil {
		log.Println("Проблема при создании таблицы с Пользователями: ", err)
		return err
	}
	return nil
}

func (s postgresStorage) createOrdersTable(ctx context.Context) error {
	_, err := s.DB.ExecContext(ctx,
		"CREATE TABLE IF NOT EXISTS Orders"+
			"("+
			"Number TEXT PRIMARY KEY "+
			", Status TEXT "+
			", Accrual NUMERIC "+
			", Withdrawn NUMERIC "+
			", UploadedTime TIMESTAMP "+
			", ProcessedTime TIMESTAMP "+
			", UserLogin TEXT REFERENCES Users(login) "+
			");")
	if err != nil {
		log.Println("Проблема при создании таблицы с Заказами: ", err)
		return err
	}
	return nil
}

func (s postgresStorage) createOperationsTable(ctx context.Context) error {
	_, err := s.DB.ExecContext(ctx,
		"CREATE TABLE IF NOT EXISTS Operations"+
			"("+
			"ID INT GENERATED BY DEFAULT AS IDENTITY"+
			", Sum NUMERIC"+
			", ProcessedTime TIMESTAMP "+
			", OrderNumber TEXT"+
			", UserLogin TEXT REFERENCES Users(login)"+
			")")
	if err != nil {
		log.Println("Проблема при создании таблицы с Операциями: ", err)
		return err
	}
	return nil
}
